// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  role           String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  blogs   Blog[]
  Comment Comment[]
}

model Blog {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  createdAt    DateTime       @default(now())
  imageSrc     String
  description  String
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String         @db.ObjectId
  categoryName String?
  BlogCategory BlogCategory[]
  comments     Comment[]
}

model Category {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  BlogCategory BlogCategory[]
}

model Comment {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  blog       Blog     @relation(fields: [blogId], references: [id])
  blogId     String   @db.ObjectId
  author     User     @relation(fields: [userId], references: [id])
  authorId   String   @db.ObjectId
  text       String
  nameAuthor String
  imageSrc   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String   @db.ObjectId
}

model BlogCategory {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  blog       Blog     @relation(fields: [blogId], references: [id])
  blogId     String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String   @db.ObjectId
}
